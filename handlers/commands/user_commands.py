from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from icecream import ic

from data import users

from keyboards import user_keyboards as kb
from loader import ADMINS

from states.user_states import Interview

router = Router(name=__name__)

hello_message = '''üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –í–∞—Å, {user}!\n
–ú—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞, —Å–æ–∑–¥–∞—é—â–∞—è <b>–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ, —Å—Ç–∏–ª—å–Ω—ã–µ –∏ –ø—Ä–æ–¥–∞—é—â–∏–µ —Å–∞–π—Ç—ã.</b>\n
–ú—ã –ø–æ–º–æ–∂–µ–º –≤–æ–ø–ª–æ—Ç–∏—Ç—å –í–∞—à–∏ –∏–¥–µ–∏ –∏ –ø–æ–ª—É—á–∏—Ç—å —Å–∞–π—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –ø—Ä–æ–¥–∞–∂–∏.\n
–î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º—Å—è, –∫–∞–∫–æ–π —Å–∞–π—Ç –í–∞–º –Ω—É–∂–µ–Ω!'''


@router.message(~F.from_user.id.in_(ADMINS), CommandStart(), ~F.chat.type.in_(['group', 'supergroup']))
async def wellcome(message: Message, state: FSMContext):
    await state.clear()
    is_reg = await users.user_is_in_table(user_id=message.from_user.id)
    if is_reg:
        user = await users.get_user(message.from_user.id)
        await message.answer(
            text=hello_message.format(
                user=user[-1]
            )
        )
        await main_menu(message, state)

    else:
        text = '''üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –í–∞—Å!\n–î–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è. –ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?'''
        await state.set_state(Interview.name)
        await message.answer(
            text=text,
            reply_markup=await kb.build_inline_keyboard([f'–ú–µ–Ω—è –∑–æ–≤—É—Ç {message.from_user.full_name}!'])
        )


async def main_menu(message: Message, state: FSMContext):
    await state.clear()
    keyboard = await kb.build_inline_keyboard(['üíª –ó–∞–∫–∞–∑–∞—Ç—å —Å–∞–π—Ç', 'üìû –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã', 'üìÇ –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç'], (1, 2))
    await message.answer(
        text="üè† –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é",
        reply_markup=keyboard
    )


@router.message(Command('help'))
async def help(message: Message):
    pass
